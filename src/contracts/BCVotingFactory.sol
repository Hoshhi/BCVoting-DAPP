pragma experimental ABIEncoderV2;

/**
 * Description:
 *   Smart contract wallet with 2-step authentication based on OTPs generated by CSPRNG and aggregated by Merkle tree.
 *
 * SPDX-License-Identifier: MIT
 */
// pragma solidity ^0.5.8;
pragma solidity >=0.5.8 <0.8.0;

import "./BCVoting.sol";

contract BCVotingFactory {
    event BCVotingContractCreated(address newAddress);

    address[] public allVotings;

    function createBCVoting(
        string[] memory _candidates,
        uint256[] memory _cand_generators,
        uint256 _deltaT,
        uint256 _mpc_batch_size
    ) public returns (BCVoting) {
        BCVoting b =
            new BCVoting(
                _candidates,
                _cand_generators,
                _deltaT,
                _mpc_batch_size,
                msg.sender
            );
        // emit BCVotingContractCreated(address(b));
        allVotings.push(address(b));
        return b;
    }

    function destruct() public {
        selfdestruct(msg.sender);
    }
}
